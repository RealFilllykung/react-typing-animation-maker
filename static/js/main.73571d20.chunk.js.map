{"version":3,"sources":["components/InputAnimationDetail.js","components/TypingAnimationDisplayer.js","components/TypingBox.js","App.js","reportWebVitals.js","index.js"],"names":["InputAnimationDetail","props","setInputText","setAppearSeconds","setDisappearSeconds","handleChange","e","type","value","target","number","parseInt","Row","Col","md","FloatingLabel","label","Form","Control","placeholder","as","rows","onChange","TypingAnimationDisplayer","text","displayTime","disappearTime","style","fontSize","className","loop","Infinity","steps","TypingBox","useState","inputText","appearSeconds","disappearSeconds","RenderAnimation","minWidth","App","backgroundColor","minHeight","display","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSA8CeA,MA3Cf,SAA8BC,GAE1B,IAAMC,EAAeD,EAAMC,aAErBC,EAAmBF,EAAME,iBAEzBC,EAAsBH,EAAMG,oBAGlC,SAASC,EAAaC,EAAEC,GACpB,IAAMC,EAAQF,EAAEG,OAAOD,MACjBE,EAASC,SAASH,GAEX,cAATD,EAAsBL,EAAaM,GACrB,kBAATD,EAA0BJ,EAAwB,IAAPO,GAClC,qBAATH,GAA6BH,EAA2B,IAAPM,GAG9D,OACI,gCACI,cAACE,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKC,IAAE,EAAP,SACI,cAACC,EAAA,EAAD,CAAeC,MAAM,OAArB,SACI,cAACC,EAAA,EAAKC,QAAN,CAAcC,YAAY,OAAOZ,KAAK,OAAOa,GAAG,WAAWC,KAAM,EAAGC,SAAU,SAAChB,GAAD,OAAOD,EAAaC,EAAE,sBAIhH,eAACM,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,IAAE,EAAP,SACI,cAACC,EAAA,EAAD,CAAeC,MAAM,mBAArB,SACI,cAACC,EAAA,EAAKC,QAAN,CAAcC,YAAY,UAAUZ,KAAK,SAASe,SAAU,SAAChB,GAAD,OAAOD,EAAaC,EAAE,wBAG1F,cAACO,EAAA,EAAD,CAAKC,IAAE,EAAP,SACI,cAACC,EAAA,EAAD,CAAeC,MAAM,sBAArB,SACI,cAACC,EAAA,EAAKC,QAAN,CAAcC,YAAY,UAAUZ,KAAK,SAASe,SAAU,SAAChB,GAAD,OAAOD,EAAaC,EAAE,kC,QCf3FiB,MArBf,SAAkCtB,GAC9B,IAAMuB,EAAOvB,EAAMuB,KACbC,EAAcxB,EAAMwB,YACpBC,EAAgBzB,EAAMyB,cAE5B,OACI,qBAAKC,MAAO,CAACC,SAAS,QAASC,UAAU,OAAzC,SACI,cAAC,IAAD,CACIC,KAAMC,IACNC,MAAO,CACHR,EACAC,EACA,GACAC,QC0BLO,MArCf,WAAqB,IAAD,EACkBC,mBAAS,IAD3B,mBACTC,EADS,KACEjC,EADF,OAE0BgC,mBAAS,GAFnC,mBAETE,EAFS,KAEMjC,EAFN,OAGgC+B,mBAAS,GAHzC,mBAGTG,EAHS,KAGSjC,EAHT,KAKhB,SAASkC,IACL,OACI,cAAC,EAAD,CAA0Bd,KAAMW,EAAWV,YAAaW,EAAeV,cAAeW,IAI9F,OACI,gCACI,qBAAKV,MAAO,CACRY,SAAS,SADb,SAGI,cAAC,EAAD,CACIJ,UAAaA,EACbjC,aAAgBA,EAEhBkC,cAAiBA,EACjBjC,iBAAoBA,EAEpBkC,iBAAoBA,EACpBjC,oBAAuBA,MAI/B,8BACI,cAACkC,EAAD,UCXDE,MAlBf,WACE,OACE,qBAAKX,UAAU,MAAf,SACE,qBACEF,MAAO,CACLc,gBAAgB,UAChBC,UAAU,QACVH,SAAU,QACVI,QAAQ,QALZ,SAQE,cAAC,EAAD,SCHOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.73571d20.chunk.js","sourcesContent":["\r\nimport { Col, FloatingLabel, Form, Row } from \"react-bootstrap\"\r\n\r\nfunction InputAnimationDetail(props){\r\n\r\n    const setInputText = props.setInputText\r\n\r\n    const setAppearSeconds = props.setAppearSeconds\r\n\r\n    const setDisappearSeconds = props.setDisappearSeconds\r\n\r\n\r\n    function handleChange(e,type){\r\n        const value = e.target.value\r\n        const number = parseInt(value)\r\n\r\n        if (type === 'inputText') setInputText(value)\r\n        else if (type === 'appearSeconds') setAppearSeconds(number*1000)\r\n        else if (type === 'disappearSeconds') setDisappearSeconds(number*1000)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col md>\r\n                    <FloatingLabel label=\"Text\">\r\n                        <Form.Control placeholder=\"Text\" type=\"text\" as=\"textarea\" rows={3} onChange={(e) => handleChange(e,'inputText')}></Form.Control>\r\n                    </FloatingLabel>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md>\r\n                    <FloatingLabel label=\"Appear second(s)\">\r\n                        <Form.Control placeholder=\"seconds\" type=\"number\" onChange={(e) => handleChange(e,'appearSeconds')}></Form.Control>\r\n                    </FloatingLabel>\r\n                </Col>\r\n                <Col md>\r\n                    <FloatingLabel label=\"Disappear second(s)\">\r\n                        <Form.Control placeholder=\"seconds\" type=\"number\" onChange={(e) => handleChange(e,'disappearSeconds')}></Form.Control>\r\n                    </FloatingLabel>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputAnimationDetail","import Typical from 'react-typical'\r\n\r\nfunction TypingAnimationDisplayer(props){\r\n    const text = props.text\r\n    const displayTime = props.displayTime\r\n    const disappearTime = props.disappearTime\r\n\r\n    return(\r\n        <div style={{fontSize:\"80px\"}} className=\"mt-5\">\r\n            <Typical\r\n                loop={Infinity}\r\n                steps={[\r\n                    text,\r\n                    displayTime,\r\n                    '',\r\n                    disappearTime\r\n                ]}\r\n            >\r\n            </Typical>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TypingAnimationDisplayer","import { useState } from \"react\"\r\nimport InputAnimationDetail from \"./InputAnimationDetail\"\r\nimport TypingAnimationDisplayer from \"./TypingAnimationDisplayer\"\r\n\r\nfunction TypingBox(){\r\n    const [inputText, setInputText] = useState('')\r\n    const [appearSeconds, setAppearSeconds] = useState(0)\r\n    const [disappearSeconds, setDisappearSeconds] = useState(0)\r\n\r\n    function RenderAnimation(){\r\n        return (\r\n            <TypingAnimationDisplayer text={inputText} displayTime={appearSeconds} disappearTime={disappearSeconds}></TypingAnimationDisplayer>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{\r\n                minWidth:\"100vw\"\r\n            }}>\r\n                <InputAnimationDetail\r\n                    inputText = {inputText}\r\n                    setInputText = {setInputText}\r\n\r\n                    appearSeconds = {appearSeconds}\r\n                    setAppearSeconds = {setAppearSeconds}\r\n\r\n                    disappearSeconds = {disappearSeconds}\r\n                    setDisappearSeconds = {setDisappearSeconds}\r\n                ></InputAnimationDetail>\r\n            </div>\r\n            \r\n            <div>\r\n                <RenderAnimation></RenderAnimation>\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default TypingBox","import './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport TypingBox from './components/TypingBox';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div \r\n        style={{\r\n          backgroundColor:\"#00ff00\", \r\n          minHeight:\"100vh\",\r\n          minWidth: \"100vw\",\r\n          display:\"flex\"\r\n        }}\r\n      >\r\n        <TypingBox></TypingBox>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}